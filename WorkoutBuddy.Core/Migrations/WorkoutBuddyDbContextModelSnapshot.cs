// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutBuddy.Core.Repositories;

#nullable disable

namespace WorkoutBuddy.Core.Migrations
{
    [DbContext(typeof(WorkoutBuddyDbContext))]
    partial class WorkoutBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutBuddy.Core.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int>("CurrentReps")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxReps")
                        .HasColumnType("int");

                    b.Property<int>("MinReps")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutTemplateId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.HasIndex("WorkoutTemplateId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.ExerciseLog", b =>
                {
                    b.Property<int>("ExerciseLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseLogId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseLogId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExerciseLogs");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("WorkoutDate")
                        .HasColumnType("date");

                    b.Property<int?>("WorkoutTemplateId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutTemplateId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.WorkoutTemplate", b =>
                {
                    b.Property<int>("WorkoutTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutTemplateId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutTemplates");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.Exercise", b =>
                {
                    b.HasOne("WorkoutBuddy.Core.Models.Workout", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId");

                    b.HasOne("WorkoutBuddy.Core.Models.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.ExerciseLog", b =>
                {
                    b.HasOne("WorkoutBuddy.Core.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Core.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.Workout", b =>
                {
                    b.HasOne("WorkoutBuddy.Core.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutBuddy.Core.Models.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany()
                        .HasForeignKey("WorkoutTemplateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.WorkoutTemplate", b =>
                {
                    b.HasOne("WorkoutBuddy.Core.Models.User", "User")
                        .WithMany("WorkoutTemplates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.User", b =>
                {
                    b.Navigation("WorkoutTemplates");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.Workout", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("WorkoutBuddy.Core.Models.WorkoutTemplate", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
